// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PSWHospital.Models;

namespace PSWHospital.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20210902180739_Mfm")]
    partial class Mfm
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PSWHospital.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("longblob");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("PSWHospital.Models.Admin", b =>
                {
                    b.HasBaseType("PSWHospital.Models.User");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasDiscriminator().HasValue("Admin");

                    b.HasData(
                        new
                        {
                            Id = 19,
                            PasswordHash = new byte[] { 96, 87, 132, 251, 242, 193, 29, 60, 70, 228, 77, 239, 32, 233, 69, 94, 167, 82, 118, 161, 236, 53, 33, 1, 180, 175, 8, 211, 72, 134, 8, 129, 193, 226, 93, 204, 47, 53, 39, 148, 122, 156, 224, 221, 197, 104, 68, 240, 124, 174, 176, 230, 124, 89, 166, 23, 212, 7, 26, 115, 124, 191, 166, 237 },
                            PasswordSalt = new byte[] { 101, 176, 126, 119, 210, 6, 122, 60, 170, 181, 14, 17, 91, 254, 193, 32, 234, 110, 134, 40, 138, 80, 206, 161, 190, 120, 254, 33, 244, 253, 119, 76, 125, 209, 242, 179, 34, 105, 187, 104, 139, 149, 123, 146, 136, 84, 33, 142, 18, 85, 27, 174, 38, 215, 100, 96, 161, 40, 122, 50, 253, 169, 46, 136, 5, 81, 82, 234, 11, 10, 0, 169, 137, 7, 252, 30, 205, 3, 184, 30, 159, 191, 196, 85, 235, 164, 57, 175, 36, 99, 171, 176, 245, 61, 102, 217, 162, 161, 238, 96, 108, 95, 238, 98, 123, 102, 195, 39, 52, 177, 171, 204, 214, 236, 136, 149, 23, 194, 27, 193, 158, 226, 41, 254, 0, 153, 5, 4 },
                            UserName = "admin@gmail.com",
                            UserType = 0,
                            FirstName = "Nikolina",
                            LastName = "Ivankovic"
                        });
                });

            modelBuilder.Entity("PSWHospital.Models.Doctor", b =>
                {
                    b.HasBaseType("PSWHospital.Models.User");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DoctorType")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnName("Doctor_FirstName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastName")
                        .HasColumnName("Doctor_LastName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Town")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasDiscriminator().HasValue("Doctor");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            PasswordHash = new byte[] { 96, 87, 132, 251, 242, 193, 29, 60, 70, 228, 77, 239, 32, 233, 69, 94, 167, 82, 118, 161, 236, 53, 33, 1, 180, 175, 8, 211, 72, 134, 8, 129, 193, 226, 93, 204, 47, 53, 39, 148, 122, 156, 224, 221, 197, 104, 68, 240, 124, 174, 176, 230, 124, 89, 166, 23, 212, 7, 26, 115, 124, 191, 166, 237 },
                            PasswordSalt = new byte[] { 101, 176, 126, 119, 210, 6, 122, 60, 170, 181, 14, 17, 91, 254, 193, 32, 234, 110, 134, 40, 138, 80, 206, 161, 190, 120, 254, 33, 244, 253, 119, 76, 125, 209, 242, 179, 34, 105, 187, 104, 139, 149, 123, 146, 136, 84, 33, 142, 18, 85, 27, 174, 38, 215, 100, 96, 161, 40, 122, 50, 253, 169, 46, 136, 5, 81, 82, 234, 11, 10, 0, 169, 137, 7, 252, 30, 205, 3, 184, 30, 159, 191, 196, 85, 235, 164, 57, 175, 36, 99, 171, 176, 245, 61, 102, 217, 162, 161, 238, 96, 108, 95, 238, 98, 123, 102, 195, 39, 52, 177, 171, 204, 214, 236, 136, 149, 23, 194, 27, 193, 158, 226, 41, 254, 0, 153, 5, 4 },
                            UserName = "generalpractitioner1@gmail.com",
                            UserType = 2,
                            DoctorType = 0,
                            FirstName = "Dusan",
                            LastName = "Sisarica"
                        },
                        new
                        {
                            Id = 6,
                            PasswordHash = new byte[] { 96, 87, 132, 251, 242, 193, 29, 60, 70, 228, 77, 239, 32, 233, 69, 94, 167, 82, 118, 161, 236, 53, 33, 1, 180, 175, 8, 211, 72, 134, 8, 129, 193, 226, 93, 204, 47, 53, 39, 148, 122, 156, 224, 221, 197, 104, 68, 240, 124, 174, 176, 230, 124, 89, 166, 23, 212, 7, 26, 115, 124, 191, 166, 237 },
                            PasswordSalt = new byte[] { 101, 176, 126, 119, 210, 6, 122, 60, 170, 181, 14, 17, 91, 254, 193, 32, 234, 110, 134, 40, 138, 80, 206, 161, 190, 120, 254, 33, 244, 253, 119, 76, 125, 209, 242, 179, 34, 105, 187, 104, 139, 149, 123, 146, 136, 84, 33, 142, 18, 85, 27, 174, 38, 215, 100, 96, 161, 40, 122, 50, 253, 169, 46, 136, 5, 81, 82, 234, 11, 10, 0, 169, 137, 7, 252, 30, 205, 3, 184, 30, 159, 191, 196, 85, 235, 164, 57, 175, 36, 99, 171, 176, 245, 61, 102, 217, 162, 161, 238, 96, 108, 95, 238, 98, 123, 102, 195, 39, 52, 177, 171, 204, 214, 236, 136, 149, 23, 194, 27, 193, 158, 226, 41, 254, 0, 153, 5, 4 },
                            UserName = "generalpractitioner2@gmail.com",
                            UserType = 2,
                            DoctorType = 0,
                            FirstName = "Dajana",
                            LastName = "Erceg"
                        },
                        new
                        {
                            Id = 7,
                            PasswordHash = new byte[] { 96, 87, 132, 251, 242, 193, 29, 60, 70, 228, 77, 239, 32, 233, 69, 94, 167, 82, 118, 161, 236, 53, 33, 1, 180, 175, 8, 211, 72, 134, 8, 129, 193, 226, 93, 204, 47, 53, 39, 148, 122, 156, 224, 221, 197, 104, 68, 240, 124, 174, 176, 230, 124, 89, 166, 23, 212, 7, 26, 115, 124, 191, 166, 237 },
                            PasswordSalt = new byte[] { 101, 176, 126, 119, 210, 6, 122, 60, 170, 181, 14, 17, 91, 254, 193, 32, 234, 110, 134, 40, 138, 80, 206, 161, 190, 120, 254, 33, 244, 253, 119, 76, 125, 209, 242, 179, 34, 105, 187, 104, 139, 149, 123, 146, 136, 84, 33, 142, 18, 85, 27, 174, 38, 215, 100, 96, 161, 40, 122, 50, 253, 169, 46, 136, 5, 81, 82, 234, 11, 10, 0, 169, 137, 7, 252, 30, 205, 3, 184, 30, 159, 191, 196, 85, 235, 164, 57, 175, 36, 99, 171, 176, 245, 61, 102, 217, 162, 161, 238, 96, 108, 95, 238, 98, 123, 102, 195, 39, 52, 177, 171, 204, 214, 236, 136, 149, 23, 194, 27, 193, 158, 226, 41, 254, 0, 153, 5, 4 },
                            UserName = "generalpractitioner3@gmail.com",
                            UserType = 2,
                            DoctorType = 0,
                            FirstName = "Zorana",
                            LastName = "Vlaskalic"
                        },
                        new
                        {
                            Id = 8,
                            PasswordHash = new byte[] { 96, 87, 132, 251, 242, 193, 29, 60, 70, 228, 77, 239, 32, 233, 69, 94, 167, 82, 118, 161, 236, 53, 33, 1, 180, 175, 8, 211, 72, 134, 8, 129, 193, 226, 93, 204, 47, 53, 39, 148, 122, 156, 224, 221, 197, 104, 68, 240, 124, 174, 176, 230, 124, 89, 166, 23, 212, 7, 26, 115, 124, 191, 166, 237 },
                            PasswordSalt = new byte[] { 101, 176, 126, 119, 210, 6, 122, 60, 170, 181, 14, 17, 91, 254, 193, 32, 234, 110, 134, 40, 138, 80, 206, 161, 190, 120, 254, 33, 244, 253, 119, 76, 125, 209, 242, 179, 34, 105, 187, 104, 139, 149, 123, 146, 136, 84, 33, 142, 18, 85, 27, 174, 38, 215, 100, 96, 161, 40, 122, 50, 253, 169, 46, 136, 5, 81, 82, 234, 11, 10, 0, 169, 137, 7, 252, 30, 205, 3, 184, 30, 159, 191, 196, 85, 235, 164, 57, 175, 36, 99, 171, 176, 245, 61, 102, 217, 162, 161, 238, 96, 108, 95, 238, 98, 123, 102, 195, 39, 52, 177, 171, 204, 214, 236, 136, 149, 23, 194, 27, 193, 158, 226, 41, 254, 0, 153, 5, 4 },
                            UserName = "generalpractitioner4@gmail.com",
                            UserType = 2,
                            DoctorType = 0,
                            FirstName = "Stefan",
                            LastName = "Simic"
                        },
                        new
                        {
                            Id = 9,
                            PasswordHash = new byte[] { 96, 87, 132, 251, 242, 193, 29, 60, 70, 228, 77, 239, 32, 233, 69, 94, 167, 82, 118, 161, 236, 53, 33, 1, 180, 175, 8, 211, 72, 134, 8, 129, 193, 226, 93, 204, 47, 53, 39, 148, 122, 156, 224, 221, 197, 104, 68, 240, 124, 174, 176, 230, 124, 89, 166, 23, 212, 7, 26, 115, 124, 191, 166, 237 },
                            PasswordSalt = new byte[] { 101, 176, 126, 119, 210, 6, 122, 60, 170, 181, 14, 17, 91, 254, 193, 32, 234, 110, 134, 40, 138, 80, 206, 161, 190, 120, 254, 33, 244, 253, 119, 76, 125, 209, 242, 179, 34, 105, 187, 104, 139, 149, 123, 146, 136, 84, 33, 142, 18, 85, 27, 174, 38, 215, 100, 96, 161, 40, 122, 50, 253, 169, 46, 136, 5, 81, 82, 234, 11, 10, 0, 169, 137, 7, 252, 30, 205, 3, 184, 30, 159, 191, 196, 85, 235, 164, 57, 175, 36, 99, 171, 176, 245, 61, 102, 217, 162, 161, 238, 96, 108, 95, 238, 98, 123, 102, 195, 39, 52, 177, 171, 204, 214, 236, 136, 149, 23, 194, 27, 193, 158, 226, 41, 254, 0, 153, 5, 4 },
                            UserName = "generalpractitioner5@gmail.com",
                            UserType = 2,
                            DoctorType = 0,
                            FirstName = "Uros",
                            LastName = "Popovic"
                        },
                        new
                        {
                            Id = 10,
                            PasswordHash = new byte[] { 96, 87, 132, 251, 242, 193, 29, 60, 70, 228, 77, 239, 32, 233, 69, 94, 167, 82, 118, 161, 236, 53, 33, 1, 180, 175, 8, 211, 72, 134, 8, 129, 193, 226, 93, 204, 47, 53, 39, 148, 122, 156, 224, 221, 197, 104, 68, 240, 124, 174, 176, 230, 124, 89, 166, 23, 212, 7, 26, 115, 124, 191, 166, 237 },
                            PasswordSalt = new byte[] { 101, 176, 126, 119, 210, 6, 122, 60, 170, 181, 14, 17, 91, 254, 193, 32, 234, 110, 134, 40, 138, 80, 206, 161, 190, 120, 254, 33, 244, 253, 119, 76, 125, 209, 242, 179, 34, 105, 187, 104, 139, 149, 123, 146, 136, 84, 33, 142, 18, 85, 27, 174, 38, 215, 100, 96, 161, 40, 122, 50, 253, 169, 46, 136, 5, 81, 82, 234, 11, 10, 0, 169, 137, 7, 252, 30, 205, 3, 184, 30, 159, 191, 196, 85, 235, 164, 57, 175, 36, 99, 171, 176, 245, 61, 102, 217, 162, 161, 238, 96, 108, 95, 238, 98, 123, 102, 195, 39, 52, 177, 171, 204, 214, 236, 136, 149, 23, 194, 27, 193, 158, 226, 41, 254, 0, 153, 5, 4 },
                            UserName = "neurologist1@gmail.com",
                            UserType = 2,
                            DoctorType = 2,
                            FirstName = "Jovan",
                            LastName = "Jenjic"
                        },
                        new
                        {
                            Id = 11,
                            PasswordHash = new byte[] { 96, 87, 132, 251, 242, 193, 29, 60, 70, 228, 77, 239, 32, 233, 69, 94, 167, 82, 118, 161, 236, 53, 33, 1, 180, 175, 8, 211, 72, 134, 8, 129, 193, 226, 93, 204, 47, 53, 39, 148, 122, 156, 224, 221, 197, 104, 68, 240, 124, 174, 176, 230, 124, 89, 166, 23, 212, 7, 26, 115, 124, 191, 166, 237 },
                            PasswordSalt = new byte[] { 101, 176, 126, 119, 210, 6, 122, 60, 170, 181, 14, 17, 91, 254, 193, 32, 234, 110, 134, 40, 138, 80, 206, 161, 190, 120, 254, 33, 244, 253, 119, 76, 125, 209, 242, 179, 34, 105, 187, 104, 139, 149, 123, 146, 136, 84, 33, 142, 18, 85, 27, 174, 38, 215, 100, 96, 161, 40, 122, 50, 253, 169, 46, 136, 5, 81, 82, 234, 11, 10, 0, 169, 137, 7, 252, 30, 205, 3, 184, 30, 159, 191, 196, 85, 235, 164, 57, 175, 36, 99, 171, 176, 245, 61, 102, 217, 162, 161, 238, 96, 108, 95, 238, 98, 123, 102, 195, 39, 52, 177, 171, 204, 214, 236, 136, 149, 23, 194, 27, 193, 158, 226, 41, 254, 0, 153, 5, 4 },
                            UserName = "neurologist2@gmail.com",
                            UserType = 2,
                            DoctorType = 2,
                            FirstName = "Jana",
                            LastName = "Tatalovic"
                        },
                        new
                        {
                            Id = 12,
                            PasswordHash = new byte[] { 96, 87, 132, 251, 242, 193, 29, 60, 70, 228, 77, 239, 32, 233, 69, 94, 167, 82, 118, 161, 236, 53, 33, 1, 180, 175, 8, 211, 72, 134, 8, 129, 193, 226, 93, 204, 47, 53, 39, 148, 122, 156, 224, 221, 197, 104, 68, 240, 124, 174, 176, 230, 124, 89, 166, 23, 212, 7, 26, 115, 124, 191, 166, 237 },
                            PasswordSalt = new byte[] { 101, 176, 126, 119, 210, 6, 122, 60, 170, 181, 14, 17, 91, 254, 193, 32, 234, 110, 134, 40, 138, 80, 206, 161, 190, 120, 254, 33, 244, 253, 119, 76, 125, 209, 242, 179, 34, 105, 187, 104, 139, 149, 123, 146, 136, 84, 33, 142, 18, 85, 27, 174, 38, 215, 100, 96, 161, 40, 122, 50, 253, 169, 46, 136, 5, 81, 82, 234, 11, 10, 0, 169, 137, 7, 252, 30, 205, 3, 184, 30, 159, 191, 196, 85, 235, 164, 57, 175, 36, 99, 171, 176, 245, 61, 102, 217, 162, 161, 238, 96, 108, 95, 238, 98, 123, 102, 195, 39, 52, 177, 171, 204, 214, 236, 136, 149, 23, 194, 27, 193, 158, 226, 41, 254, 0, 153, 5, 4 },
                            UserName = "neurologist3@gmail.com",
                            UserType = 2,
                            DoctorType = 2,
                            FirstName = "Nikola",
                            LastName = "Petrovic"
                        },
                        new
                        {
                            Id = 13,
                            PasswordHash = new byte[] { 96, 87, 132, 251, 242, 193, 29, 60, 70, 228, 77, 239, 32, 233, 69, 94, 167, 82, 118, 161, 236, 53, 33, 1, 180, 175, 8, 211, 72, 134, 8, 129, 193, 226, 93, 204, 47, 53, 39, 148, 122, 156, 224, 221, 197, 104, 68, 240, 124, 174, 176, 230, 124, 89, 166, 23, 212, 7, 26, 115, 124, 191, 166, 237 },
                            PasswordSalt = new byte[] { 101, 176, 126, 119, 210, 6, 122, 60, 170, 181, 14, 17, 91, 254, 193, 32, 234, 110, 134, 40, 138, 80, 206, 161, 190, 120, 254, 33, 244, 253, 119, 76, 125, 209, 242, 179, 34, 105, 187, 104, 139, 149, 123, 146, 136, 84, 33, 142, 18, 85, 27, 174, 38, 215, 100, 96, 161, 40, 122, 50, 253, 169, 46, 136, 5, 81, 82, 234, 11, 10, 0, 169, 137, 7, 252, 30, 205, 3, 184, 30, 159, 191, 196, 85, 235, 164, 57, 175, 36, 99, 171, 176, 245, 61, 102, 217, 162, 161, 238, 96, 108, 95, 238, 98, 123, 102, 195, 39, 52, 177, 171, 204, 214, 236, 136, 149, 23, 194, 27, 193, 158, 226, 41, 254, 0, 153, 5, 4 },
                            UserName = "neurologist4@gmail.com",
                            UserType = 2,
                            DoctorType = 2,
                            FirstName = "Stefan",
                            LastName = "Stupar"
                        },
                        new
                        {
                            Id = 14,
                            PasswordHash = new byte[] { 96, 87, 132, 251, 242, 193, 29, 60, 70, 228, 77, 239, 32, 233, 69, 94, 167, 82, 118, 161, 236, 53, 33, 1, 180, 175, 8, 211, 72, 134, 8, 129, 193, 226, 93, 204, 47, 53, 39, 148, 122, 156, 224, 221, 197, 104, 68, 240, 124, 174, 176, 230, 124, 89, 166, 23, 212, 7, 26, 115, 124, 191, 166, 237 },
                            PasswordSalt = new byte[] { 101, 176, 126, 119, 210, 6, 122, 60, 170, 181, 14, 17, 91, 254, 193, 32, 234, 110, 134, 40, 138, 80, 206, 161, 190, 120, 254, 33, 244, 253, 119, 76, 125, 209, 242, 179, 34, 105, 187, 104, 139, 149, 123, 146, 136, 84, 33, 142, 18, 85, 27, 174, 38, 215, 100, 96, 161, 40, 122, 50, 253, 169, 46, 136, 5, 81, 82, 234, 11, 10, 0, 169, 137, 7, 252, 30, 205, 3, 184, 30, 159, 191, 196, 85, 235, 164, 57, 175, 36, 99, 171, 176, 245, 61, 102, 217, 162, 161, 238, 96, 108, 95, 238, 98, 123, 102, 195, 39, 52, 177, 171, 204, 214, 236, 136, 149, 23, 194, 27, 193, 158, 226, 41, 254, 0, 153, 5, 4 },
                            UserName = "dermatologist1@gmail.com",
                            UserType = 2,
                            DoctorType = 1,
                            FirstName = "Marija",
                            LastName = "Jovanic"
                        },
                        new
                        {
                            Id = 15,
                            PasswordHash = new byte[] { 96, 87, 132, 251, 242, 193, 29, 60, 70, 228, 77, 239, 32, 233, 69, 94, 167, 82, 118, 161, 236, 53, 33, 1, 180, 175, 8, 211, 72, 134, 8, 129, 193, 226, 93, 204, 47, 53, 39, 148, 122, 156, 224, 221, 197, 104, 68, 240, 124, 174, 176, 230, 124, 89, 166, 23, 212, 7, 26, 115, 124, 191, 166, 237 },
                            PasswordSalt = new byte[] { 101, 176, 126, 119, 210, 6, 122, 60, 170, 181, 14, 17, 91, 254, 193, 32, 234, 110, 134, 40, 138, 80, 206, 161, 190, 120, 254, 33, 244, 253, 119, 76, 125, 209, 242, 179, 34, 105, 187, 104, 139, 149, 123, 146, 136, 84, 33, 142, 18, 85, 27, 174, 38, 215, 100, 96, 161, 40, 122, 50, 253, 169, 46, 136, 5, 81, 82, 234, 11, 10, 0, 169, 137, 7, 252, 30, 205, 3, 184, 30, 159, 191, 196, 85, 235, 164, 57, 175, 36, 99, 171, 176, 245, 61, 102, 217, 162, 161, 238, 96, 108, 95, 238, 98, 123, 102, 195, 39, 52, 177, 171, 204, 214, 236, 136, 149, 23, 194, 27, 193, 158, 226, 41, 254, 0, 153, 5, 4 },
                            UserName = "dermatologist2@gmail.com",
                            UserType = 2,
                            DoctorType = 1,
                            FirstName = "Teodora",
                            LastName = "Milic"
                        },
                        new
                        {
                            Id = 16,
                            PasswordHash = new byte[] { 96, 87, 132, 251, 242, 193, 29, 60, 70, 228, 77, 239, 32, 233, 69, 94, 167, 82, 118, 161, 236, 53, 33, 1, 180, 175, 8, 211, 72, 134, 8, 129, 193, 226, 93, 204, 47, 53, 39, 148, 122, 156, 224, 221, 197, 104, 68, 240, 124, 174, 176, 230, 124, 89, 166, 23, 212, 7, 26, 115, 124, 191, 166, 237 },
                            PasswordSalt = new byte[] { 101, 176, 126, 119, 210, 6, 122, 60, 170, 181, 14, 17, 91, 254, 193, 32, 234, 110, 134, 40, 138, 80, 206, 161, 190, 120, 254, 33, 244, 253, 119, 76, 125, 209, 242, 179, 34, 105, 187, 104, 139, 149, 123, 146, 136, 84, 33, 142, 18, 85, 27, 174, 38, 215, 100, 96, 161, 40, 122, 50, 253, 169, 46, 136, 5, 81, 82, 234, 11, 10, 0, 169, 137, 7, 252, 30, 205, 3, 184, 30, 159, 191, 196, 85, 235, 164, 57, 175, 36, 99, 171, 176, 245, 61, 102, 217, 162, 161, 238, 96, 108, 95, 238, 98, 123, 102, 195, 39, 52, 177, 171, 204, 214, 236, 136, 149, 23, 194, 27, 193, 158, 226, 41, 254, 0, 153, 5, 4 },
                            UserName = "dermatologist3@gmail.com",
                            UserType = 2,
                            DoctorType = 1,
                            FirstName = "Anastasja",
                            LastName = "Rinic"
                        },
                        new
                        {
                            Id = 17,
                            PasswordHash = new byte[] { 96, 87, 132, 251, 242, 193, 29, 60, 70, 228, 77, 239, 32, 233, 69, 94, 167, 82, 118, 161, 236, 53, 33, 1, 180, 175, 8, 211, 72, 134, 8, 129, 193, 226, 93, 204, 47, 53, 39, 148, 122, 156, 224, 221, 197, 104, 68, 240, 124, 174, 176, 230, 124, 89, 166, 23, 212, 7, 26, 115, 124, 191, 166, 237 },
                            PasswordSalt = new byte[] { 101, 176, 126, 119, 210, 6, 122, 60, 170, 181, 14, 17, 91, 254, 193, 32, 234, 110, 134, 40, 138, 80, 206, 161, 190, 120, 254, 33, 244, 253, 119, 76, 125, 209, 242, 179, 34, 105, 187, 104, 139, 149, 123, 146, 136, 84, 33, 142, 18, 85, 27, 174, 38, 215, 100, 96, 161, 40, 122, 50, 253, 169, 46, 136, 5, 81, 82, 234, 11, 10, 0, 169, 137, 7, 252, 30, 205, 3, 184, 30, 159, 191, 196, 85, 235, 164, 57, 175, 36, 99, 171, 176, 245, 61, 102, 217, 162, 161, 238, 96, 108, 95, 238, 98, 123, 102, 195, 39, 52, 177, 171, 204, 214, 236, 136, 149, 23, 194, 27, 193, 158, 226, 41, 254, 0, 153, 5, 4 },
                            UserName = "dermatologist4@gmail.com",
                            UserType = 2,
                            DoctorType = 1,
                            FirstName = "Zoran",
                            LastName = "Kosic"
                        },
                        new
                        {
                            Id = 18,
                            PasswordHash = new byte[] { 96, 87, 132, 251, 242, 193, 29, 60, 70, 228, 77, 239, 32, 233, 69, 94, 167, 82, 118, 161, 236, 53, 33, 1, 180, 175, 8, 211, 72, 134, 8, 129, 193, 226, 93, 204, 47, 53, 39, 148, 122, 156, 224, 221, 197, 104, 68, 240, 124, 174, 176, 230, 124, 89, 166, 23, 212, 7, 26, 115, 124, 191, 166, 237 },
                            PasswordSalt = new byte[] { 101, 176, 126, 119, 210, 6, 122, 60, 170, 181, 14, 17, 91, 254, 193, 32, 234, 110, 134, 40, 138, 80, 206, 161, 190, 120, 254, 33, 244, 253, 119, 76, 125, 209, 242, 179, 34, 105, 187, 104, 139, 149, 123, 146, 136, 84, 33, 142, 18, 85, 27, 174, 38, 215, 100, 96, 161, 40, 122, 50, 253, 169, 46, 136, 5, 81, 82, 234, 11, 10, 0, 169, 137, 7, 252, 30, 205, 3, 184, 30, 159, 191, 196, 85, 235, 164, 57, 175, 36, 99, 171, 176, 245, 61, 102, 217, 162, 161, 238, 96, 108, 95, 238, 98, 123, 102, 195, 39, 52, 177, 171, 204, 214, 236, 136, 149, 23, 194, 27, 193, 158, 226, 41, 254, 0, 153, 5, 4 },
                            UserName = "dermatologist5@gmail.com",
                            UserType = 2,
                            DoctorType = 1,
                            FirstName = "Ognjen",
                            LastName = "Markovic"
                        });
                });

            modelBuilder.Entity("PSWHospital.Models.Patient", b =>
                {
                    b.HasBaseType("PSWHospital.Models.User");

                    b.Property<string>("Address")
                        .HasColumnName("Patient_Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FirstName")
                        .HasColumnName("Patient_FirstName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("IdGeneralPractitioner")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .HasColumnName("Patient_LastName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Town")
                        .HasColumnName("Patient_Town")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasDiscriminator().HasValue("Patient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 96, 87, 132, 251, 242, 193, 29, 60, 70, 228, 77, 239, 32, 233, 69, 94, 167, 82, 118, 161, 236, 53, 33, 1, 180, 175, 8, 211, 72, 134, 8, 129, 193, 226, 93, 204, 47, 53, 39, 148, 122, 156, 224, 221, 197, 104, 68, 240, 124, 174, 176, 230, 124, 89, 166, 23, 212, 7, 26, 115, 124, 191, 166, 237 },
                            PasswordSalt = new byte[] { 101, 176, 126, 119, 210, 6, 122, 60, 170, 181, 14, 17, 91, 254, 193, 32, 234, 110, 134, 40, 138, 80, 206, 161, 190, 120, 254, 33, 244, 253, 119, 76, 125, 209, 242, 179, 34, 105, 187, 104, 139, 149, 123, 146, 136, 84, 33, 142, 18, 85, 27, 174, 38, 215, 100, 96, 161, 40, 122, 50, 253, 169, 46, 136, 5, 81, 82, 234, 11, 10, 0, 169, 137, 7, 252, 30, 205, 3, 184, 30, 159, 191, 196, 85, 235, 164, 57, 175, 36, 99, 171, 176, 245, 61, 102, 217, 162, 161, 238, 96, 108, 95, 238, 98, 123, 102, 195, 39, 52, 177, 171, 204, 214, 236, 136, 149, 23, 194, 27, 193, 158, 226, 41, 254, 0, 153, 5, 4 },
                            UserName = "patient1@gmail.com",
                            UserType = 1,
                            FirstName = "Jovana",
                            IdGeneralPractitioner = 5,
                            IsDeleted = false,
                            LastName = "Jovanic"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 96, 87, 132, 251, 242, 193, 29, 60, 70, 228, 77, 239, 32, 233, 69, 94, 167, 82, 118, 161, 236, 53, 33, 1, 180, 175, 8, 211, 72, 134, 8, 129, 193, 226, 93, 204, 47, 53, 39, 148, 122, 156, 224, 221, 197, 104, 68, 240, 124, 174, 176, 230, 124, 89, 166, 23, 212, 7, 26, 115, 124, 191, 166, 237 },
                            PasswordSalt = new byte[] { 101, 176, 126, 119, 210, 6, 122, 60, 170, 181, 14, 17, 91, 254, 193, 32, 234, 110, 134, 40, 138, 80, 206, 161, 190, 120, 254, 33, 244, 253, 119, 76, 125, 209, 242, 179, 34, 105, 187, 104, 139, 149, 123, 146, 136, 84, 33, 142, 18, 85, 27, 174, 38, 215, 100, 96, 161, 40, 122, 50, 253, 169, 46, 136, 5, 81, 82, 234, 11, 10, 0, 169, 137, 7, 252, 30, 205, 3, 184, 30, 159, 191, 196, 85, 235, 164, 57, 175, 36, 99, 171, 176, 245, 61, 102, 217, 162, 161, 238, 96, 108, 95, 238, 98, 123, 102, 195, 39, 52, 177, 171, 204, 214, 236, 136, 149, 23, 194, 27, 193, 158, 226, 41, 254, 0, 153, 5, 4 },
                            UserName = "patient2@gmail.com",
                            UserType = 1,
                            FirstName = "Ivana",
                            IdGeneralPractitioner = 6,
                            IsDeleted = false,
                            LastName = "Ivanic"
                        },
                        new
                        {
                            Id = 3,
                            PasswordHash = new byte[] { 96, 87, 132, 251, 242, 193, 29, 60, 70, 228, 77, 239, 32, 233, 69, 94, 167, 82, 118, 161, 236, 53, 33, 1, 180, 175, 8, 211, 72, 134, 8, 129, 193, 226, 93, 204, 47, 53, 39, 148, 122, 156, 224, 221, 197, 104, 68, 240, 124, 174, 176, 230, 124, 89, 166, 23, 212, 7, 26, 115, 124, 191, 166, 237 },
                            PasswordSalt = new byte[] { 101, 176, 126, 119, 210, 6, 122, 60, 170, 181, 14, 17, 91, 254, 193, 32, 234, 110, 134, 40, 138, 80, 206, 161, 190, 120, 254, 33, 244, 253, 119, 76, 125, 209, 242, 179, 34, 105, 187, 104, 139, 149, 123, 146, 136, 84, 33, 142, 18, 85, 27, 174, 38, 215, 100, 96, 161, 40, 122, 50, 253, 169, 46, 136, 5, 81, 82, 234, 11, 10, 0, 169, 137, 7, 252, 30, 205, 3, 184, 30, 159, 191, 196, 85, 235, 164, 57, 175, 36, 99, 171, 176, 245, 61, 102, 217, 162, 161, 238, 96, 108, 95, 238, 98, 123, 102, 195, 39, 52, 177, 171, 204, 214, 236, 136, 149, 23, 194, 27, 193, 158, 226, 41, 254, 0, 153, 5, 4 },
                            UserName = "patient3@gmail.com",
                            UserType = 1,
                            FirstName = "Marko",
                            IdGeneralPractitioner = 7,
                            IsDeleted = false,
                            LastName = "Markovic"
                        },
                        new
                        {
                            Id = 4,
                            PasswordHash = new byte[] { 96, 87, 132, 251, 242, 193, 29, 60, 70, 228, 77, 239, 32, 233, 69, 94, 167, 82, 118, 161, 236, 53, 33, 1, 180, 175, 8, 211, 72, 134, 8, 129, 193, 226, 93, 204, 47, 53, 39, 148, 122, 156, 224, 221, 197, 104, 68, 240, 124, 174, 176, 230, 124, 89, 166, 23, 212, 7, 26, 115, 124, 191, 166, 237 },
                            PasswordSalt = new byte[] { 101, 176, 126, 119, 210, 6, 122, 60, 170, 181, 14, 17, 91, 254, 193, 32, 234, 110, 134, 40, 138, 80, 206, 161, 190, 120, 254, 33, 244, 253, 119, 76, 125, 209, 242, 179, 34, 105, 187, 104, 139, 149, 123, 146, 136, 84, 33, 142, 18, 85, 27, 174, 38, 215, 100, 96, 161, 40, 122, 50, 253, 169, 46, 136, 5, 81, 82, 234, 11, 10, 0, 169, 137, 7, 252, 30, 205, 3, 184, 30, 159, 191, 196, 85, 235, 164, 57, 175, 36, 99, 171, 176, 245, 61, 102, 217, 162, 161, 238, 96, 108, 95, 238, 98, 123, 102, 195, 39, 52, 177, 171, 204, 214, 236, 136, 149, 23, 194, 27, 193, 158, 226, 41, 254, 0, 153, 5, 4 },
                            UserName = "patient4@gmail.com",
                            UserType = 1,
                            FirstName = "Stefan",
                            IdGeneralPractitioner = 8,
                            IsDeleted = false,
                            LastName = "Stefanovic"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
